#include "stdafx.h"

#include "opencv2/opencv.hpp"

#include <iostream>
#include <sstream>


using namespace cv;
using namespace std;

Mat fgMaskMOG1; //fg mask fg mask generated by MOG1 method
Ptr<BackgroundSubtractor> pMOG1; //MOG1 Background subtractor

int mainmd1(int argc, char** argv)
{
	VideoCapture cap(argv[1]); // open the default camera
	if (!cap.isOpened())  // check if we succeeded
		return -1;

	//create Background Subtractor objects
	pMOG1 = createBackgroundSubtractorMOG(); //MOG1 approach

	namedWindow("frame", 1);
	namedWindow("FG Mask MOG 1");
	for (;;)
	{
		Mat frame;
		cap >> frame; // get a new frame from camera
		imshow("frame", frame);

		pMOG1->apply(frame, fgMaskMOG1);

		imshow("FG Mask MOG 1", fgMaskMOG1);

		if (waitKey(30) >= 0) break;
	}
	// the camera will be deinitialized automatically in VideoCapture destructor
	return 0;
}